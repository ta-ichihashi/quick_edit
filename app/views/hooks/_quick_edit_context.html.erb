<%
   extend ApplicationHelper
   extend IssueRelationsHelper
   custom_fields = @issues.map(&:available_custom_fields).reduce(:&).select do |f|
     #concat f.field_format
     %w(string date int).include?(f.field_format)
   end

   first_issue = @issues.first
   first_issue_id = first_issue.id
   if @issues.size > 1
      second_issue = @issues[1]
      second_issue_id = second_issue.id
   else
      second_issue_id = ''
   end

   # 可能なら更新後に選択されたチケットに戻り先に設定
   if @back.match(/\/projects\/.*?\/issues/)
     back_url = @back + '#issue-' + first_issue.id.to_s
   else
     back_url = @back
   end

   bulk_update_url = bulk_update_issues_path(:ids => @issue_ids, :back_url => back_url);
%>
  <li class="folder">
    <a href="#" class="submenu"><%= l(:button_quick_edit) %></a>
    <ul>
      <%= quick_edit_link_to(bulk_update_url, @issue_ids, l(:field_subject), :subject, :string, first_issue.subject, !@can[:update]) %>
      <%= quick_edit_link_to(bulk_update_url, @issue_ids, l(:field_parent_issue), :parent_issue_id, :int, first_issue.parent_id, !@can[:update]) %>


      <% unless @issues.any? {|issue| issue.disabled_core_fields.include?('start_date') } %>
      <%= quick_edit_link_to(bulk_update_url, @issue_ids, l(:field_start_date), :start_date, :date, first_issue.start_date, !@can[:update]) %>
      <% end %>

      <% unless @issues.any? {|issue| issue.disabled_core_fields.include?('due_date') } %>
      <%= quick_edit_link_to(bulk_update_url, @issue_ids, l(:field_due_date), :due_date, :date, first_issue.due_date, !@can[:update]) %>
      <% end %>

      <% custom_fields.each do |f| %>
      <%= quick_edit_link_to(bulk_update_url, @issue_ids, f.name, 'custom_field_values[%d]' % f.id, f.field_format, first_issue.editable_custom_field_values.detect {|v| v.custom_field_id == f.id}, !@can[:update]) %>
      <% end %>

      <% if @issues.size <= 2  %>
        <% if User.current.allowed_to?(:manage_issue_relations, @project) %>
        <hr>
        <li><%= link_to l(:label_relation_new),
                        'javascript: quick_edit_show_new_relation_dialog(\''+first_issue_id.to_s+'\',\''+second_issue_id.to_s+'\',\''+URI.encode_www_form_component(back_url)+'\');',
                        :remote => false,
                        :title => l(:label_relation_new),
                        :class => 'icon',
                        :style => 'background-image: url("'+image_path('link.png')+'")' %></li>
        <% end %>
      <% end %>

      <% if @issues.size == 1 && first_issue.relations.any? %>
        <hr>
        <% first_issue.relations.each do |relation| %>
          <% other_issue = relation.other_issue(first_issue) %>
          <% if User.current.allowed_to?(:manage_issue_relations, @project) %>
            <li><%= link_to l(relation.label_for(first_issue)) + " \##{other_issue.id}",
                            quick_edit_relation_path(relation, :back_url => back_url),
                            :remote => false,
                            :method => :delete,
                            :data => {:confirm => l(:text_are_you_sure)},
                            :title => l(:label_relation_delete),
                            :class => 'icon',
                            :style => 'background-image: url("'+image_path('link_break.png')+'");' %></li>
          <% end %> 
        <% end %>
      <% end %>
   </ul>
  </li>
  <div id="quick_edit_input_dialog" style="display:none;" title="Quick Edit">
     <p id="quick_edit_input_dialog_message"></p>
     <form>
        <fieldset id="text_fields" style="border: none; margin:none; padding: none;">
        <input id="quick_edit_input_dialog_new_value" type="text" size="40" style="vertical-align:middle;"></input>
        </fieldset>
        <fieldset id="date_fields" style="border: none; margin:none; padding: none;">
        <input id="quick_edit_input_dialog_new_date_value" type="text" size="40" style="vertical-align:middle;"></input>
        <%= calendar_for('quick_edit_input_dialog_new_date_value') %>
        </fieldset>
        <input id="quick_edit_input_dialog_bulk_update_url" type="hidden"></input>
        <input id="quick_edit_input_dialog_issue_ids" type="hidden"></input>
        <input id="quick_edit_input_dialog_target" type="hidden"></input>
        <input id="quick_edit_input_dialog_field_type" type="hidden"></input>
        <input id="quick_edit_input_dialog_pattern" type="hidden"></input>
        <input id="quick_edit_input_dialog_dummy" type="text" style="display:none"></input>
     </form> 
  </div>

  <div id="quick_edit_new_relation_dialog" style="display:none;" title="Quick Edit - <%= l(:label_relation_new) %>">
    <%= form_tag({:controller=>'quick_edit_relations', :action=>:create}) do %>
      <%= text_field_tag :issue_id, '', { :size => 10 } %>
      <%= select :relation, :relation_type, collection_for_relation_type_select, {}, :onchange => "setPredecessorFieldsVisibility();"  %>
      <%= text_field_tag 'relation[issue_to_id]', '', { :size => 10 } %>
      <%= hidden_field_tag :back_url, '' %>
      <span id="predecessor_fields" style="display:none;">
      <br><%= l(:field_delay) %>: <%= text_field_tag :delay, '', {:size => 3} %> <%= l(:label_day_plural) %>
      </span><br>
      <hr> 
      <%= submit_tag l(:button_add) %>
      <%= submit_tag l(:button_cancel), :onclick => 'javascript: quick_edit_new_relation_dialog_cancel();', :type => 'button' %>

      <%= javascript_tag "observeAutocompleteField('issue_id', '#{escape_javascript auto_complete_issues_path(:project_id => @project, :scope => (Setting.cross_project_issue_relations? ? 'all' : nil))}')" %>
      <%= javascript_tag "observeAutocompleteField('relation_issue_to_id', '#{escape_javascript auto_complete_issues_path(:project_id => @project, :scope => (Setting.cross_project_issue_relations? ? 'all' : nil))}')" %>

      <%= javascript_tag "setPredecessorFieldsVisibility();" %>

    <% end %>
  </div>

<script>
//<![CDATA[
function quick_edit_get_value_element(field_type) {
  if (field_type == 'date') {
     return $('#quick_edit_input_dialog_new_date_value');
  } else {
     return $('#quick_edit_input_dialog_new_value');
  }
}

function quick_edit_show_input_dialog(bulk_update_url,ids,field_name,target,field_type,pattern,message,default_value){
  if (field_type == 'date') {
     $("#quick_edit_input_dialog > form > #text_fields").css("display", "none");
     $("#quick_edit_input_dialog > form > #date_fields").css("display", "block");
  } else {
     $("#quick_edit_input_dialog > form > #text_fields").css("display", "block");
     $("#quick_edit_input_dialog > form > #date_fields").css("display", "none");
  }

  if (default_value) {
     quick_edit_get_value_element(field_type).val(default_value);
  }

  $("#quick_edit_input_dialog").attr('title','Quick Edit - ' + field_name);
  $("#quick_edit_input_dialog_bulk_update_url").val(bulk_update_url);
  $("#quick_edit_input_dialog_issue_ids").val(ids);
  $("#quick_edit_input_dialog_target").val(target);
  $("#quick_edit_input_dialog_field_type").val(field_type);
  $("#quick_edit_input_dialog_pattern").val(pattern);
  $("#quick_edit_input_dialog_message").html(message);
  $("#quick_edit_input_dialog").dialog({
     modal: true,
     closeOnEscape: false,
     width: 500,
     height: 210,
     buttons: {
        "Ok" : quick_edit_input_dialog_ok,
        "Cancel" : quick_edit_input_dialog_cancel
     },
     close: quick_edit_input_dialog_close
  });
}

function quick_edit_input_dialog_close(){
  $("#quick_edit_input_dialog").remove();
}

function quick_edit_input_dialog_cancel(){
  $("#quick_edit_input_dialog").dialog("close");
}

function quick_edit_input_dialog_ok(){
  var field_type = $("#quick_edit_input_dialog_field_type").val();
  var new_value = quick_edit_get_value_element(field_type).val();
  if(new_value === null) return;

  var target = $("#quick_edit_input_dialog_target").val();
  var pattern = new RegExp($("#quick_edit_input_dialog_pattern").val());

  if(new_value == "") {
    alert('<%=l(:text_is_required)%>');
    return;

  } else {

    if(pattern && !pattern.test(new_value)){
       alert('<%=l(:text_invalid_format)%>');
       return;
    }
  }

  var issue_ids = $("#quick_edit_input_dialog_issue_ids").val();
  if(issue_ids.length>1){
     if(!confirm('<%=l(:text_multiple_update_confirm)%>')) return;
  }

  var additional_index;
  var match = /(.*)\[([0-9]+)\]/.exec(target);
  if(match){
     target_name = match[1];
     additional_index = match[2];
  }else{
     target_name = target;
     additional_index = null;
  }

  var bulk_update_html_id = '';
  var bulk_update_url = $("#quick_edit_input_dialog_bulk_update_url").val();
  if (additional_index === null) {
      bulk_update_html_id = '#context_edit_update_link_' + target_name;
      bulk_update_url += encodeURI('&issue['+target_name+']='+new_value);
  } else {
      bulk_update_html_id = '#context_edit_update_link_' + target_name + '_'+additional_index+'_';
      bulk_update_url += encodeURI('&issue['+target_name+']['+additional_index+']='+new_value);
  }

  jQuery(bulk_update_html_id)
     .attr('href',bulk_update_url)
     .click();
}

function quick_edit_show_new_relation_dialog(first_issue_id, second_issue_id, back_url){
  $("#quick_edit_new_relation_dialog > form > #issue_id").val(first_issue_id);
  $("#quick_edit_new_relation_dialog > form > #relation_issue_to_id").val(second_issue_id);
  $("#quick_edit_new_relation_dialog > form > #back_url").val(back_url);
  $("#quick_edit_new_relation_dialog").dialog({
     modal: true,
     closeOnEscape: false,
     width: 450,
     height: 150,
     close: quick_edit_new_relation_dialog_close
  });
}

function quick_edit_new_relation_dialog_cancel(){
   $('#quick_edit_new_relation_dialog').dialog("close");
}

function quick_edit_new_relation_dialog_close(){
   $('#quick_edit_new_relation_dialog').remove();
}

//]]>
</script>

